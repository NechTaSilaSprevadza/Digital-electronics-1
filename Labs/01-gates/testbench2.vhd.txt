------------------------------------------------------------------------
--
-- Testbench for basic gates circuit.
-- Nexys A7-50T, Vivado v2020.1, EDA Playground
--
-- Copyright (c) 2020-2021 Adam Budac - student
-- Copyright (c) 2019-2020 Tomas Fryza - teacher
-- Dept. of Radio Electronics, Brno University of Technology, Czechia
-- This work is licensed under the terms of the MIT license.
--
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

------------------------------------------------------------------------
-- Entity declaration for testbench
------------------------------------------------------------------------
entity tb_gates is
    -- Entity of testbench is always empty
end entity tb_gates;

------------------------------------------------------------------------
-- Architecture body for testbench
------------------------------------------------------------------------
architecture testbench of tb_gates is

    -- Local signals
    signal s_x     : std_logic;
    signal s_y     : std_logic;
    signal s_z     : std_logic;
    signal s_f1    : std_logic;
    signal s_f2    : std_logic;
    signal s_f3    : std_logic;
    signal s_f4    : std_logic;

begin
    -- Connecting testbench signals with gates entity (Unit Under Test)
    uut_gates : entity work.gates
        port map(
            x_i     => s_x,
            y_i     => s_y,
            z_i     => s_z,
            f1_o    => s_f1,
            f2_o    => s_f2,
            f3_o    => s_f3,
            f4_o    => s_f4
        );

    --------------------------------------------------------------------
    -- Data generation process
    --------------------------------------------------------------------
    p_stimulus : process
    begin
        s_z <= '0';             -- Set input values and wait for 100 ns
        s_y <= '0';             
        s_x <= '0';
        wait for 100 ns;
        s_z <= '0';
        s_y <= '0';
        s_x <= '1';
        wait for 100 ns;
        s_z <= '0';
        s_y <= '1';
        s_x <= '0';
        wait for 100 ns;
        s_z <= '0';
        s_y <= '1';
        s_x <= '1';
        wait for 100 ns;
        s_z <= '1';
        s_y <= '0';
        s_x <= '0';
        wait for 100 ns;
        s_z <= '1';
        s_y <= '0';
        s_x <= '1';
        wait for 100 ns;
        s_z <= '1';
        s_y <= '1';
        s_x <= '0';
        wait for 100 ns;
        s_z <= '1';
        s_y <= '1';
        s_x <= '1';
        wait for 100 ns;
        wait;                   -- Process is suspended forever
    end process p_stimulus;

end architecture testbench;
